// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model Company {
  id       String  @id @default(cuid())
  name     String
  code     String  @unique
  active   Boolean @default(true)
  
  users       User[]
  evaluations Evaluation[]
  evaluationItems EvaluationItem[]
  evaluationItemAssignments EvaluationItemAssignment[]
  performanceCycles PerformanceCycle[]
  partialAssessments PartialAssessment[]
  
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model User {
  id         String  @id @default(cuid())
  companyId  String
  email      String?
  username   String?
  name       String
  role       String  // "employee" | "manager" | "hr"
  managerId  String?
  active     Boolean @default(true)
  
  // Authentication fields
  passwordHash     String?
  pinCode         String?
  userType        String @default("office") // "office" | "operational"  
  loginMethod     String @default("email")  // "email" | "username" | "qr"
  requiresPinOnly Boolean @default(false)
  
  // Employee details
  employeeId String?
  department String?
  shift      String?
  lastLogin  DateTime?
  
  company          Company      @relation(fields: [companyId], references: [id])
  manager          User?        @relation("ManagerEmployee", fields: [managerId], references: [id])
  employees        User[]       @relation("ManagerEmployee")
  evaluationsGiven Evaluation[] @relation("ManagerEvaluations")
  evaluationsReceived Evaluation[] @relation("EmployeeEvaluations")
  createdEvaluationItems EvaluationItem[] @relation("CreatedEvaluationItems")
  employeeAssignments EvaluationItemAssignment[] @relation("EmployeeAssignments")
  managerAssignments EvaluationItemAssignment[] @relation("AssignedByManager")
  auditLogs        AuditLog[]
  closedCycles     PerformanceCycle[] @relation("CycleClosedBy")
  partialAssessmentsAsEmployee PartialAssessment[] @relation("PartialAssessmentEmployee")
  partialAssessmentsAsAssessor PartialAssessment[] @relation("PartialAssessmentAssessor")
  
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  
  @@unique([companyId, email])
  @@unique([companyId, username])
}

model Evaluation {
  id           String  @id @default(cuid())
  employeeId   String
  managerId    String
  companyId    String
  cycleId      String? // Foreign key to PerformanceCycle (nullable for backwards compatibility)
  periodType   String  // "monthly" | "quarterly" | "semester" | "yearly"
  periodDate   String  // "2024-Q1" | "2024-03" 
  
  // JSON data for flexibility
  evaluationItemsData String? // JSON string - unified OKRs and competencies
  
  overallRating    Int?    // 1-5 scale
  managerComments  String?
  status          String @default("draft") // "draft" | "submitted" | "approved"
  
  employee  User    @relation("EmployeeEvaluations", fields: [employeeId], references: [id])
  manager   User    @relation("ManagerEvaluations", fields: [managerId], references: [id])
  company   Company @relation(fields: [companyId], references: [id])
  cycle     PerformanceCycle? @relation(fields: [cycleId], references: [id])
  auditLogs AuditLog[]
  
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  
  @@unique([employeeId, periodType, periodDate])
}

model EvaluationItem {
  id          String  @id @default(cuid())
  companyId   String
  cycleId     String? // Foreign key to PerformanceCycle (nullable for backwards compatibility)
  title       String
  description String
  
  // Item type: "okr" or "competency" 
  type        String  // "okr" | "competency"
  
  // Three-tier assignment system
  level       String  // "company" | "department" | "manager"
  createdBy   String  // HR user ID or Manager user ID
  assignedTo  String? // Department name or specific manager ID
  
  active      Boolean @default(true)
  sortOrder   Int     @default(0)
  
  company     Company @relation(fields: [companyId], references: [id])
  cycle       PerformanceCycle? @relation(fields: [cycleId], references: [id])
  creator     User    @relation("CreatedEvaluationItems", fields: [createdBy], references: [id])
  individualAssignments EvaluationItemAssignment[]
  partialAssessments PartialAssessment[]
  
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model EvaluationItemAssignment {
  id              String @id @default(cuid())
  evaluationItemId String
  employeeId      String
  assignedBy      String // Manager who made the assignment
  companyId       String
  
  evaluationItem  EvaluationItem @relation(fields: [evaluationItemId], references: [id], onDelete: Cascade)
  employee        User @relation("EmployeeAssignments", fields: [employeeId], references: [id])
  assignedByUser  User @relation("AssignedByManager", fields: [assignedBy], references: [id])
  company         Company @relation(fields: [companyId], references: [id])
  
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  
  @@unique([evaluationItemId, employeeId])
}

model AuditLog {
  id           String @id @default(cuid())
  evaluationId String
  userId       String
  action       String // "created" | "updated" | "submitted" | "approved"
  oldData      String? // JSON snapshot
  newData      String? // JSON snapshot
  
  evaluation Evaluation @relation(fields: [evaluationId], references: [id])
  user       User       @relation(fields: [userId], references: [id])
  
  timestamp DateTime @default(now())
}

model PerformanceCycle {
  id        String   @id @default(cuid())
  companyId String
  name      String   // "2024 Annual Review", "Q1 2024"
  startDate DateTime
  endDate   DateTime
  status    String   @default("active") // "active" | "closed" | "archived"
  closedBy  String?  // HR user ID who closed it
  closedAt  DateTime?

  company            Company             @relation(fields: [companyId], references: [id])
  closedByUser       User?               @relation("CycleClosedBy", fields: [closedBy], references: [id])
  evaluations        Evaluation[]
  evaluationItems    EvaluationItem[]
  partialAssessments PartialAssessment[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@unique([companyId, name])
}

model PartialAssessment {
  id               String   @id @default(cuid())
  cycleId          String
  employeeId       String
  evaluationItemId String
  rating           Int?     // 1-5 scale
  comment          String?
  assessedBy       String   // Manager/HR user ID
  assessedAt       DateTime @default(now())
  evaluationDate   DateTime // When the actual evaluation/performance occurred
  isActive         Boolean  @default(true) // Latest version flag
  assessmentType   String   // "manager_initial" | "hr_adjustment" | "manager_update"
  companyId        String

  cycle          PerformanceCycle @relation(fields: [cycleId], references: [id])
  employee       User             @relation("PartialAssessmentEmployee", fields: [employeeId], references: [id])
  evaluationItem EvaluationItem   @relation(fields: [evaluationItemId], references: [id])
  assessedByUser User             @relation("PartialAssessmentAssessor", fields: [assessedBy], references: [id])
  company        Company          @relation(fields: [companyId], references: [id])

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@unique([cycleId, employeeId, evaluationItemId, isActive])
}
